// <auto-generated />
using System;
using LanguageCourses.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanguageCourses.API.Migrations
{
    [DbContext(typeof(LanguageCoursesDbContext))]
    [Migration("20240127214407_First migration")]
    partial class Firstmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LanguageCourses.API.Models.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7fca3cd1-6d04-4ac1-bff6-57cb3a23e34a"),
                            Available = true,
                            Description = "Description for Course 1",
                            Duration = 0,
                            Language = "Engleski",
                            Level = "B1",
                            Name = "Course 1",
                            Price = 0,
                            ProfessorId = new Guid("9150584f-eb77-4a84-a13f-698a581985d8"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("053504c1-bfad-4ec1-9932-1e7b5e536ce8"),
                            Available = true,
                            Description = "Description for Course 2",
                            Duration = 0,
                            Language = "Engleski",
                            Level = "C1",
                            Name = "Course 2",
                            Price = 0,
                            ProfessorId = new Guid("9150584f-eb77-4a84-a13f-698a581985d8"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("d1b4704a-5a5a-4b51-ab72-68b5db496d96"),
                            Available = true,
                            Description = "Description for Course 3",
                            Duration = 0,
                            Language = "Engleski",
                            Level = "B2",
                            Name = "Course 3",
                            Price = 0,
                            ProfessorId = new Guid("4f96f59a-a880-4f17-955a-c7d94f36f6ed"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("c8b98b9e-a370-4c71-b899-ad558f4124b8"),
                            Available = true,
                            Description = "Description for Course 4",
                            Duration = 0,
                            Language = "Engleski",
                            Level = "C2",
                            Name = "Course 4",
                            Price = 0,
                            ProfessorId = new Guid("4f96f59a-a880-4f17-955a-c7d94f36f6ed"),
                            Type = 0
                        });
                });

            modelBuilder.Entity("LanguageCourses.API.Models.CourseUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("LanguageCourses.API.Models.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("961fa56e-71a8-4186-8a8d-488143d6a260"),
                            Content = "Content 1",
                            CourseId = new Guid("7fca3cd1-6d04-4ac1-bff6-57cb3a23e34a"),
                            Title = "Title 1"
                        },
                        new
                        {
                            Id = new Guid("e0c98ea1-2644-4ff0-8f2e-e7d30a3f2a6b"),
                            Content = "Content 2",
                            CourseId = new Guid("7fca3cd1-6d04-4ac1-bff6-57cb3a23e34a"),
                            Title = "Title 2"
                        },
                        new
                        {
                            Id = new Guid("b2d89a70-2ac5-4d26-94b9-ef99b746a388"),
                            Content = "Content 3",
                            CourseId = new Guid("053504c1-bfad-4ec1-9932-1e7b5e536ce8"),
                            Title = "Title 3"
                        },
                        new
                        {
                            Id = new Guid("ed0632a3-1b00-421c-be7f-044253c2d820"),
                            Content = "Content 4",
                            CourseId = new Guid("053504c1-bfad-4ec1-9932-1e7b5e536ce8"),
                            Title = "Title 4"
                        },
                        new
                        {
                            Id = new Guid("e19c5e3e-c5aa-411d-b540-0597307daf79"),
                            Content = "Content 5",
                            CourseId = new Guid("d1b4704a-5a5a-4b51-ab72-68b5db496d96"),
                            Title = "Title 5"
                        },
                        new
                        {
                            Id = new Guid("1695a6e9-f4a8-45f2-8cc9-5ff0c01dad26"),
                            Content = "Content 6",
                            CourseId = new Guid("d1b4704a-5a5a-4b51-ab72-68b5db496d96"),
                            Title = "Title 6"
                        },
                        new
                        {
                            Id = new Guid("75f0edab-103a-46ac-aff0-1f17aca2d279"),
                            Content = "Content 7",
                            CourseId = new Guid("c8b98b9e-a370-4c71-b899-ad558f4124b8"),
                            Title = "Title 7"
                        },
                        new
                        {
                            Id = new Guid("c1c2c043-1385-47d0-9ec8-c8a6085bf0bc"),
                            Content = "Content 8",
                            CourseId = new Guid("c8b98b9e-a370-4c71-b899-ad558f4124b8"),
                            Title = "Title 8"
                        });
                });

            modelBuilder.Entity("LanguageCourses.API.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CourseId1");

                    b.HasIndex("UserId");

                    b.ToTable("Posts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4b12efb-c878-4a43-9197-1efdf1d33e4a"),
                            Content = "Content 1",
                            CourseId = new Guid("7fca3cd1-6d04-4ac1-bff6-57cb3a23e34a"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(8950),
                            Rating = 5,
                            UserId = new Guid("9150584f-eb77-4a84-a13f-698a581985d8")
                        },
                        new
                        {
                            Id = new Guid("4abf8e23-8fbd-46a6-80dc-fedd31814e24"),
                            Content = "Content 2",
                            CourseId = new Guid("053504c1-bfad-4ec1-9932-1e7b5e536ce8"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(8992),
                            Rating = 5,
                            UserId = new Guid("4f96f59a-a880-4f17-955a-c7d94f36f6ed")
                        },
                        new
                        {
                            Id = new Guid("5e6fdd45-3ba6-4019-af72-665d2e1a39aa"),
                            Content = "Content 3",
                            CourseId = new Guid("d1b4704a-5a5a-4b51-ab72-68b5db496d96"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(9003),
                            Rating = 5,
                            UserId = new Guid("9150584f-eb77-4a84-a13f-698a581985d8")
                        },
                        new
                        {
                            Id = new Guid("87c1eb43-6bc9-4f0d-ab08-bf54a708c88c"),
                            Content = "Content 4",
                            CourseId = new Guid("c8b98b9e-a370-4c71-b899-ad558f4124b8"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(9012),
                            Rating = 5,
                            UserId = new Guid("4f96f59a-a880-4f17-955a-c7d94f36f6ed")
                        },
                        new
                        {
                            Id = new Guid("5f632e40-9f96-4c75-9afa-59dc6460d8e0"),
                            Content = "Content 5",
                            CourseId = new Guid("7fca3cd1-6d04-4ac1-bff6-57cb3a23e34a"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(9020),
                            Rating = 5,
                            UserId = new Guid("9150584f-eb77-4a84-a13f-698a581985d8")
                        },
                        new
                        {
                            Id = new Guid("d2d5b555-e8af-478b-a144-0ea40f7d4ed6"),
                            Content = "Content 6",
                            CourseId = new Guid("053504c1-bfad-4ec1-9932-1e7b5e536ce8"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(9028),
                            Rating = 5,
                            UserId = new Guid("4f96f59a-a880-4f17-955a-c7d94f36f6ed")
                        },
                        new
                        {
                            Id = new Guid("4bc9fece-54dc-4cca-a31b-de8a0557f8da"),
                            Content = "Content 7",
                            CourseId = new Guid("d1b4704a-5a5a-4b51-ab72-68b5db496d96"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(9036),
                            Rating = 5,
                            UserId = new Guid("9150584f-eb77-4a84-a13f-698a581985d8")
                        },
                        new
                        {
                            Id = new Guid("e8a67c2e-3943-44ed-9d6c-7a56565302e9"),
                            Content = "Content 8",
                            CourseId = new Guid("c8b98b9e-a370-4c71-b899-ad558f4124b8"),
                            PostDate = new DateTime(2024, 1, 27, 22, 44, 6, 891, DateTimeKind.Local).AddTicks(9044),
                            Rating = 5,
                            UserId = new Guid("4f96f59a-a880-4f17-955a-c7d94f36f6ed")
                        });
                });

            modelBuilder.Entity("LanguageCourses.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9150584f-eb77-4a84-a13f-698a581985d8"),
                            Email = "fjovanovic284@gmail.com",
                            FirstName = "Filip",
                            LastName = "Jovanović",
                            PasswordHash = new byte[] { 96, 76, 61, 65, 28, 48, 85, 35, 16, 177, 96, 41, 216, 31, 241, 100, 145, 229, 45, 175, 77, 28, 21, 244, 210, 36, 234, 18, 192, 43, 159, 167, 245, 30, 245, 59, 220, 21, 86, 124, 200, 179, 101, 100, 20, 134, 242, 123, 182, 120, 184, 169, 206, 190, 80, 172, 173, 209, 122, 228, 186, 167, 93, 171 },
                            PasswordSalt = new byte[] { 227, 74, 156, 231, 104, 205, 154, 63, 19, 193, 224, 180, 92, 77, 103, 101, 16, 180, 147, 36, 32, 139, 233, 189, 180, 60, 43, 190, 72, 78, 8, 17, 228, 47, 118, 167, 122, 88, 185, 16, 50, 93, 107, 154, 207, 172, 87, 226, 181, 207, 86, 7, 29, 128, 233, 10, 224, 63, 5, 7, 124, 83, 140, 118, 143, 124, 187, 31, 24, 235, 81, 69, 186, 192, 191, 246, 185, 188, 20, 93, 218, 72, 116, 149, 228, 238, 41, 106, 63, 179, 16, 50, 67, 3, 36, 241, 213, 135, 95, 186, 124, 40, 14, 90, 186, 82, 19, 101, 233, 148, 107, 223, 9, 44, 235, 20, 80, 159, 67, 229, 40, 5, 54, 209, 149, 50, 6, 189 },
                            Phone = "061 755 8995",
                            Role = 2,
                            VerificationToken = "6785118FB5FCD7D8FA40AB12435F8925F1AD2925E2746C149F73DF478F4C5FC527FFA3DA9BED5F8368557DC6837DC87DF1A0364BA2FB66199567A4BFAFA79CA0",
                            VerifiedAt = new DateTime(2024, 1, 27, 22, 44, 6, 889, DateTimeKind.Local).AddTicks(5730)
                        },
                        new
                        {
                            Id = new Guid("4f96f59a-a880-4f17-955a-c7d94f36f6ed"),
                            Email = "lule19@gmail.com",
                            FirstName = "Luka",
                            LastName = "Petrović",
                            PasswordHash = new byte[] { 96, 76, 61, 65, 28, 48, 85, 35, 16, 177, 96, 41, 216, 31, 241, 100, 145, 229, 45, 175, 77, 28, 21, 244, 210, 36, 234, 18, 192, 43, 159, 167, 245, 30, 245, 59, 220, 21, 86, 124, 200, 179, 101, 100, 20, 134, 242, 123, 182, 120, 184, 169, 206, 190, 80, 172, 173, 209, 122, 228, 186, 167, 93, 171 },
                            PasswordSalt = new byte[] { 227, 74, 156, 231, 104, 205, 154, 63, 19, 193, 224, 180, 92, 77, 103, 101, 16, 180, 147, 36, 32, 139, 233, 189, 180, 60, 43, 190, 72, 78, 8, 17, 228, 47, 118, 167, 122, 88, 185, 16, 50, 93, 107, 154, 207, 172, 87, 226, 181, 207, 86, 7, 29, 128, 233, 10, 224, 63, 5, 7, 124, 83, 140, 118, 143, 124, 187, 31, 24, 235, 81, 69, 186, 192, 191, 246, 185, 188, 20, 93, 218, 72, 116, 149, 228, 238, 41, 106, 63, 179, 16, 50, 67, 3, 36, 241, 213, 135, 95, 186, 124, 40, 14, 90, 186, 82, 19, 101, 233, 148, 107, 223, 9, 44, 235, 20, 80, 159, 67, 229, 40, 5, 54, 209, 149, 50, 6, 189 },
                            Phone = "064 765 9876",
                            Role = 2,
                            VerificationToken = "08AEC9B2FA9840AE5210194CEE83A851321A1579DBFA27CC03E735B68B13CCA050073A58382FFEFD5A3180653FDB8A7DBF1532EDC04CCC93BE64FB236C58E8EC",
                            VerifiedAt = new DateTime(2024, 1, 27, 22, 44, 6, 889, DateTimeKind.Local).AddTicks(6035)
                        },
                        new
                        {
                            Id = new Guid("73fb19cd-7b56-459e-8b84-be0d05dd67b6"),
                            Email = "boka0404002.ba@gmail.com",
                            FirstName = "Bojana",
                            LastName = "Aleksijević",
                            PasswordHash = new byte[] { 96, 76, 61, 65, 28, 48, 85, 35, 16, 177, 96, 41, 216, 31, 241, 100, 145, 229, 45, 175, 77, 28, 21, 244, 210, 36, 234, 18, 192, 43, 159, 167, 245, 30, 245, 59, 220, 21, 86, 124, 200, 179, 101, 100, 20, 134, 242, 123, 182, 120, 184, 169, 206, 190, 80, 172, 173, 209, 122, 228, 186, 167, 93, 171 },
                            PasswordSalt = new byte[] { 227, 74, 156, 231, 104, 205, 154, 63, 19, 193, 224, 180, 92, 77, 103, 101, 16, 180, 147, 36, 32, 139, 233, 189, 180, 60, 43, 190, 72, 78, 8, 17, 228, 47, 118, 167, 122, 88, 185, 16, 50, 93, 107, 154, 207, 172, 87, 226, 181, 207, 86, 7, 29, 128, 233, 10, 224, 63, 5, 7, 124, 83, 140, 118, 143, 124, 187, 31, 24, 235, 81, 69, 186, 192, 191, 246, 185, 188, 20, 93, 218, 72, 116, 149, 228, 238, 41, 106, 63, 179, 16, 50, 67, 3, 36, 241, 213, 135, 95, 186, 124, 40, 14, 90, 186, 82, 19, 101, 233, 148, 107, 223, 9, 44, 235, 20, 80, 159, 67, 229, 40, 5, 54, 209, 149, 50, 6, 189 },
                            Phone = "064 784 5668",
                            Role = 2,
                            VerificationToken = "8F775AEFF80BF81F8660F54D7FDF09E957AC03ACA7EC8E9A06B50910240339C09E417B2839A311BB7446B47CE5628E799BA9D46387579A22A596BC93B0BF1338",
                            VerifiedAt = new DateTime(2024, 1, 27, 22, 44, 6, 889, DateTimeKind.Local).AddTicks(6116)
                        });
                });

            modelBuilder.Entity("LanguageCourses.API.Models.CourseUser", b =>
                {
                    b.HasOne("LanguageCourses.API.Models.Course", "Course")
                        .WithMany("CourseUsers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanguageCourses.API.Models.User", "User")
                        .WithMany("CourseUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LanguageCourses.API.Models.Lesson", b =>
                {
                    b.HasOne("LanguageCourses.API.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LanguageCourses.API.Models.Review", b =>
                {
                    b.HasOne("LanguageCourses.API.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanguageCourses.API.Models.Course", null)
                        .WithMany("Reviews")
                        .HasForeignKey("CourseId1");

                    b.HasOne("LanguageCourses.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LanguageCourses.API.Models.Course", b =>
                {
                    b.Navigation("CourseUsers");

                    b.Navigation("Lessons");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("LanguageCourses.API.Models.User", b =>
                {
                    b.Navigation("CourseUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
